{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ollie\\\\OneDrive\\\\Desktop\\\\Personal Portfolio Site\\\\src\\\\contexts\\\\DataContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext(undefined);\nexport const useData = () => {\n  _s();\n  const context = useContext(DataContext);\n  if (context === undefined) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n_s(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [projects, setProjects] = useState([]);\n  const [experiences, setExperiences] = useState([]);\n  const [skills, setSkills] = useState([]);\n  useEffect(() => {\n    // Load data from localStorage or use default data\n    const loadData = () => {\n      try {\n        const savedProjects = localStorage.getItem('portfolio_projects');\n        const savedExperiences = localStorage.getItem('portfolio_experiences');\n        const savedSkills = localStorage.getItem('portfolio_skills');\n        if (savedProjects) {\n          setProjects(JSON.parse(savedProjects));\n        } else {\n          // Load default data\n          import('../data/projects.json').then(data => {\n            setProjects(data.projects);\n            localStorage.setItem('portfolio_projects', JSON.stringify(data.projects));\n          });\n        }\n        if (savedExperiences) {\n          setExperiences(JSON.parse(savedExperiences));\n        } else {\n          import('../data/experiences.json').then(data => {\n            setExperiences(data.experiences);\n            localStorage.setItem('portfolio_experiences', JSON.stringify(data.experiences));\n          });\n        }\n        if (savedSkills) {\n          setSkills(JSON.parse(savedSkills));\n        } else {\n          import('../data/skills.json').then(data => {\n            setSkills(data.skills);\n            localStorage.setItem('portfolio_skills', JSON.stringify(data.skills));\n          });\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n    loadData();\n  }, []);\n  const updateProjects = newProjects => {\n    setProjects(newProjects);\n    localStorage.setItem('portfolio_projects', JSON.stringify(newProjects));\n  };\n  const updateExperiences = newExperiences => {\n    setExperiences(newExperiences);\n    localStorage.setItem('portfolio_experiences', JSON.stringify(newExperiences));\n  };\n  const updateSkills = newSkills => {\n    setSkills(newSkills);\n    localStorage.setItem('portfolio_skills', JSON.stringify(newSkills));\n  };\n  const addProject = project => {\n    const newProjects = [...projects, {\n      ...project,\n      id: Math.max(...projects.map(p => p.id), 0) + 1\n    }];\n    updateProjects(newProjects);\n  };\n  const updateProject = (id, project) => {\n    const newProjects = projects.map(p => p.id === id ? {\n      ...project,\n      id\n    } : p);\n    updateProjects(newProjects);\n  };\n  const deleteProject = id => {\n    const newProjects = projects.filter(p => p.id !== id);\n    updateProjects(newProjects);\n  };\n  const addExperience = experience => {\n    const newExperiences = [...experiences, {\n      ...experience,\n      id: Math.max(...experiences.map(e => e.id), 0) + 1\n    }];\n    updateExperiences(newExperiences);\n  };\n  const updateExperience = (id, experience) => {\n    const newExperiences = experiences.map(e => e.id === id ? {\n      ...experience,\n      id\n    } : e);\n    updateExperiences(newExperiences);\n  };\n  const deleteExperience = id => {\n    const newExperiences = experiences.filter(e => e.id !== id);\n    updateExperiences(newExperiences);\n  };\n  const addSkill = skill => {\n    const newSkills = [...skills, skill];\n    updateSkills(newSkills);\n  };\n  const updateSkill = (name, skill) => {\n    const newSkills = skills.map(s => s.name === name ? skill : s);\n    updateSkills(newSkills);\n  };\n  const deleteSkill = name => {\n    const newSkills = skills.filter(s => s.name !== name);\n    updateSkills(newSkills);\n  };\n  const value = {\n    projects,\n    experiences,\n    skills,\n    updateProjects,\n    updateExperiences,\n    updateSkills,\n    addProject,\n    updateProject,\n    deleteProject,\n    addExperience,\n    updateExperience,\n    deleteExperience,\n    addSkill,\n    updateSkill,\n    deleteSkill\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"TmEWgWc1jGgbW928RgcowiaWT9o=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","DataContext","undefined","useData","_s","context","Error","DataProvider","children","_s2","projects","setProjects","experiences","setExperiences","skills","setSkills","loadData","savedProjects","localStorage","getItem","savedExperiences","savedSkills","JSON","parse","then","data","setItem","stringify","error","console","updateProjects","newProjects","updateExperiences","newExperiences","updateSkills","newSkills","addProject","project","id","Math","max","map","p","updateProject","deleteProject","filter","addExperience","experience","e","updateExperience","deleteExperience","addSkill","skill","updateSkill","name","s","deleteSkill","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/src/contexts/DataContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { Project } from '../types';\r\n\r\ninterface Experience {\r\n  id: number;\r\n  title: string;\r\n  company: string;\r\n  duration: string;\r\n  location: string;\r\n  description: string;\r\n  achievements: string[];\r\n  technologies: string[];\r\n}\r\n\r\ninterface Skill {\r\n  name: string;\r\n  level: number;\r\n  category: 'Technical' | 'Analytical' | 'Tools' | 'Soft Skills';\r\n}\r\n\r\ninterface DataContextType {\r\n  projects: Project[];\r\n  experiences: Experience[];\r\n  skills: Skill[];\r\n  updateProjects: (projects: Project[]) => void;\r\n  updateExperiences: (experiences: Experience[]) => void;\r\n  updateSkills: (skills: Skill[]) => void;\r\n  addProject: (project: Project) => void;\r\n  updateProject: (id: number, project: Project) => void;\r\n  deleteProject: (id: number) => void;\r\n  addExperience: (experience: Experience) => void;\r\n  updateExperience: (id: number, experience: Experience) => void;\r\n  deleteExperience: (id: number) => void;\r\n  addSkill: (skill: Skill) => void;\r\n  updateSkill: (name: string, skill: Skill) => void;\r\n  deleteSkill: (name: string) => void;\r\n}\r\n\r\nconst DataContext = createContext<DataContextType | undefined>(undefined);\r\n\r\nexport const useData = () => {\r\n  const context = useContext(DataContext);\r\n  if (context === undefined) {\r\n    throw new Error('useData must be used within a DataProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface DataProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [experiences, setExperiences] = useState<Experience[]>([]);\r\n  const [skills, setSkills] = useState<Skill[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Load data from localStorage or use default data\r\n    const loadData = () => {\r\n      try {\r\n        const savedProjects = localStorage.getItem('portfolio_projects');\r\n        const savedExperiences = localStorage.getItem('portfolio_experiences');\r\n        const savedSkills = localStorage.getItem('portfolio_skills');\r\n\r\n        if (savedProjects) {\r\n          setProjects(JSON.parse(savedProjects));\r\n        } else {\r\n          // Load default data\r\n          import('../data/projects.json').then(data => {\r\n            setProjects(data.projects);\r\n            localStorage.setItem('portfolio_projects', JSON.stringify(data.projects));\r\n          });\r\n        }\r\n\r\n        if (savedExperiences) {\r\n          setExperiences(JSON.parse(savedExperiences));\r\n        } else {\r\n          import('../data/experiences.json').then(data => {\r\n            setExperiences(data.experiences);\r\n            localStorage.setItem('portfolio_experiences', JSON.stringify(data.experiences));\r\n          });\r\n        }\r\n\r\n        if (savedSkills) {\r\n          setSkills(JSON.parse(savedSkills));\r\n        } else {\r\n          import('../data/skills.json').then(data => {\r\n            setSkills(data.skills);\r\n            localStorage.setItem('portfolio_skills', JSON.stringify(data.skills));\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading data:', error);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  const updateProjects = (newProjects: Project[]) => {\r\n    setProjects(newProjects);\r\n    localStorage.setItem('portfolio_projects', JSON.stringify(newProjects));\r\n  };\r\n\r\n  const updateExperiences = (newExperiences: Experience[]) => {\r\n    setExperiences(newExperiences);\r\n    localStorage.setItem('portfolio_experiences', JSON.stringify(newExperiences));\r\n  };\r\n\r\n  const updateSkills = (newSkills: Skill[]) => {\r\n    setSkills(newSkills);\r\n    localStorage.setItem('portfolio_skills', JSON.stringify(newSkills));\r\n  };\r\n\r\n  const addProject = (project: Project) => {\r\n    const newProjects = [...projects, { ...project, id: Math.max(...projects.map(p => p.id), 0) + 1 }];\r\n    updateProjects(newProjects);\r\n  };\r\n\r\n  const updateProject = (id: number, project: Project) => {\r\n    const newProjects = projects.map(p => p.id === id ? { ...project, id } : p);\r\n    updateProjects(newProjects);\r\n  };\r\n\r\n  const deleteProject = (id: number) => {\r\n    const newProjects = projects.filter(p => p.id !== id);\r\n    updateProjects(newProjects);\r\n  };\r\n\r\n  const addExperience = (experience: Experience) => {\r\n    const newExperiences = [...experiences, { ...experience, id: Math.max(...experiences.map(e => e.id), 0) + 1 }];\r\n    updateExperiences(newExperiences);\r\n  };\r\n\r\n  const updateExperience = (id: number, experience: Experience) => {\r\n    const newExperiences = experiences.map(e => e.id === id ? { ...experience, id } : e);\r\n    updateExperiences(newExperiences);\r\n  };\r\n\r\n  const deleteExperience = (id: number) => {\r\n    const newExperiences = experiences.filter(e => e.id !== id);\r\n    updateExperiences(newExperiences);\r\n  };\r\n\r\n  const addSkill = (skill: Skill) => {\r\n    const newSkills = [...skills, skill];\r\n    updateSkills(newSkills);\r\n  };\r\n\r\n  const updateSkill = (name: string, skill: Skill) => {\r\n    const newSkills = skills.map(s => s.name === name ? skill : s);\r\n    updateSkills(newSkills);\r\n  };\r\n\r\n  const deleteSkill = (name: string) => {\r\n    const newSkills = skills.filter(s => s.name !== name);\r\n    updateSkills(newSkills);\r\n  };\r\n\r\n  const value = {\r\n    projects,\r\n    experiences,\r\n    skills,\r\n    updateProjects,\r\n    updateExperiences,\r\n    updateSkills,\r\n    addProject,\r\n    updateProject,\r\n    deleteProject,\r\n    addExperience,\r\n    updateExperience,\r\n    deleteExperience,\r\n    addSkill,\r\n    updateSkill,\r\n    deleteSkill\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={value}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}