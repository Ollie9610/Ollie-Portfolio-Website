{"ast":null,"code":"import _objectSpread from\"C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const DataContext=/*#__PURE__*/createContext(undefined);export const useData=()=>{const context=useContext(DataContext);if(context===undefined){throw new Error('useData must be used within a DataProvider');}return context;};export const DataProvider=_ref=>{let{children}=_ref;const[projects,setProjects]=useState([]);const[experiences,setExperiences]=useState([]);const[skills,setSkills]=useState([]);useEffect(()=>{// Load data from localStorage or use default data\nconst loadData=()=>{try{const savedProjects=localStorage.getItem('portfolio_projects');const savedExperiences=localStorage.getItem('portfolio_experiences');const savedSkills=localStorage.getItem('portfolio_skills');if(savedProjects){const projects=JSON.parse(savedProjects).map(project=>_objectSpread(_objectSpread({},project),{},{category:project.category}));setProjects(projects);}else{// Load default data\nimport('../data/projects.json').then(data=>{const projects=data.projects.map(project=>_objectSpread(_objectSpread({},project),{},{category:project.category}));setProjects(projects);localStorage.setItem('portfolio_projects',JSON.stringify(projects));});}if(savedExperiences){setExperiences(JSON.parse(savedExperiences));}else{import('../data/experiences.json').then(data=>{setExperiences(data.experiences);localStorage.setItem('portfolio_experiences',JSON.stringify(data.experiences));});}if(savedSkills){setSkills(JSON.parse(savedSkills));}else{import('../data/skills.json').then(data=>{setSkills(data.skills);localStorage.setItem('portfolio_skills',JSON.stringify(data.skills));});}}catch(error){console.error('Error loading data:',error);}};loadData();},[]);const updateProjects=newProjects=>{setProjects(newProjects);localStorage.setItem('portfolio_projects',JSON.stringify(newProjects));};const updateExperiences=newExperiences=>{setExperiences(newExperiences);localStorage.setItem('portfolio_experiences',JSON.stringify(newExperiences));};const updateSkills=newSkills=>{setSkills(newSkills);localStorage.setItem('portfolio_skills',JSON.stringify(newSkills));};const addProject=project=>{const newProjects=[...projects,_objectSpread(_objectSpread({},project),{},{id:Math.max(...projects.map(p=>p.id),0)+1})];updateProjects(newProjects);};const updateProject=(id,project)=>{const newProjects=projects.map(p=>p.id===id?_objectSpread(_objectSpread({},project),{},{id}):p);updateProjects(newProjects);};const deleteProject=id=>{const newProjects=projects.filter(p=>p.id!==id);updateProjects(newProjects);};const addExperience=experience=>{const newExperiences=[...experiences,_objectSpread(_objectSpread({},experience),{},{id:Math.max(...experiences.map(e=>e.id),0)+1})];updateExperiences(newExperiences);};const updateExperience=(id,experience)=>{const newExperiences=experiences.map(e=>e.id===id?_objectSpread(_objectSpread({},experience),{},{id}):e);updateExperiences(newExperiences);};const deleteExperience=id=>{const newExperiences=experiences.filter(e=>e.id!==id);updateExperiences(newExperiences);};const addSkill=skill=>{const newSkills=[...skills,skill];updateSkills(newSkills);};const updateSkill=(name,skill)=>{const newSkills=skills.map(s=>s.name===name?skill:s);updateSkills(newSkills);};const deleteSkill=name=>{const newSkills=skills.filter(s=>s.name!==name);updateSkills(newSkills);};const value={projects,experiences,skills,updateProjects,updateExperiences,updateSkills,addProject,updateProject,deleteProject,addExperience,updateExperience,deleteExperience,addSkill,updateSkill,deleteSkill};return/*#__PURE__*/_jsx(DataContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","DataContext","undefined","useData","context","Error","DataProvider","_ref","children","projects","setProjects","experiences","setExperiences","skills","setSkills","loadData","savedProjects","localStorage","getItem","savedExperiences","savedSkills","JSON","parse","map","project","_objectSpread","category","then","data","setItem","stringify","error","console","updateProjects","newProjects","updateExperiences","newExperiences","updateSkills","newSkills","addProject","id","Math","max","p","updateProject","deleteProject","filter","addExperience","experience","e","updateExperience","deleteExperience","addSkill","skill","updateSkill","name","s","deleteSkill","value","Provider"],"sources":["C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/src/contexts/DataContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Project } from '../types';\n\ninterface Experience {\n  id: number;\n  title: string;\n  company: string;\n  duration: string;\n  location: string;\n  description: string;\n  achievements: string[];\n  technologies: string[];\n}\n\ninterface Skill {\n  name: string;\n  level: number;\n  category: 'Technical' | 'Analytical' | 'Tools' | 'Soft Skills';\n}\n\ninterface DataContextType {\n  projects: Project[];\n  experiences: Experience[];\n  skills: Skill[];\n  updateProjects: (projects: Project[]) => void;\n  updateExperiences: (experiences: Experience[]) => void;\n  updateSkills: (skills: Skill[]) => void;\n  addProject: (project: Project) => void;\n  updateProject: (id: number, project: Project) => void;\n  deleteProject: (id: number) => void;\n  addExperience: (experience: Experience) => void;\n  updateExperience: (id: number, experience: Experience) => void;\n  deleteExperience: (id: number) => void;\n  addSkill: (skill: Skill) => void;\n  updateSkill: (name: string, skill: Skill) => void;\n  deleteSkill: (name: string) => void;\n}\n\nconst DataContext = createContext<DataContextType | undefined>(undefined);\n\nexport const useData = () => {\n  const context = useContext(DataContext);\n  if (context === undefined) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n\ninterface DataProviderProps {\n  children: React.ReactNode;\n}\n\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [experiences, setExperiences] = useState<Experience[]>([]);\n  const [skills, setSkills] = useState<Skill[]>([]);\n\n  useEffect(() => {\n    // Load data from localStorage or use default data\n    const loadData = () => {\n      try {\n        const savedProjects = localStorage.getItem('portfolio_projects');\n        const savedExperiences = localStorage.getItem('portfolio_experiences');\n        const savedSkills = localStorage.getItem('portfolio_skills');\n\n        if (savedProjects) {\n          const projects = JSON.parse(savedProjects).map((project: any) => ({\n            ...project,\n            category: project.category as 'project' | 'dashboard'\n          }));\n          setProjects(projects);\n        } else {\n          // Load default data\n          import('../data/projects.json').then(data => {\n            const projects = data.projects.map(project => ({\n              ...project,\n              category: project.category as 'project' | 'dashboard'\n            }));\n            setProjects(projects);\n            localStorage.setItem('portfolio_projects', JSON.stringify(projects));\n          });\n        }\n\n        if (savedExperiences) {\n          setExperiences(JSON.parse(savedExperiences));\n        } else {\n          import('../data/experiences.json').then(data => {\n            setExperiences(data.experiences);\n            localStorage.setItem('portfolio_experiences', JSON.stringify(data.experiences));\n          });\n        }\n\n        if (savedSkills) {\n          setSkills(JSON.parse(savedSkills));\n        } else {\n          import('../data/skills.json').then(data => {\n            setSkills(data.skills as Skill[]);\n            localStorage.setItem('portfolio_skills', JSON.stringify(data.skills));\n          });\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  const updateProjects = (newProjects: Project[]) => {\n    setProjects(newProjects);\n    localStorage.setItem('portfolio_projects', JSON.stringify(newProjects));\n  };\n\n  const updateExperiences = (newExperiences: Experience[]) => {\n    setExperiences(newExperiences);\n    localStorage.setItem('portfolio_experiences', JSON.stringify(newExperiences));\n  };\n\n  const updateSkills = (newSkills: Skill[]) => {\n    setSkills(newSkills);\n    localStorage.setItem('portfolio_skills', JSON.stringify(newSkills));\n  };\n\n  const addProject = (project: Project) => {\n    const newProjects = [...projects, { ...project, id: Math.max(...projects.map(p => p.id), 0) + 1 }];\n    updateProjects(newProjects);\n  };\n\n  const updateProject = (id: number, project: Project) => {\n    const newProjects = projects.map(p => p.id === id ? { ...project, id } : p);\n    updateProjects(newProjects);\n  };\n\n  const deleteProject = (id: number) => {\n    const newProjects = projects.filter(p => p.id !== id);\n    updateProjects(newProjects);\n  };\n\n  const addExperience = (experience: Experience) => {\n    const newExperiences = [...experiences, { ...experience, id: Math.max(...experiences.map(e => e.id), 0) + 1 }];\n    updateExperiences(newExperiences);\n  };\n\n  const updateExperience = (id: number, experience: Experience) => {\n    const newExperiences = experiences.map(e => e.id === id ? { ...experience, id } : e);\n    updateExperiences(newExperiences);\n  };\n\n  const deleteExperience = (id: number) => {\n    const newExperiences = experiences.filter(e => e.id !== id);\n    updateExperiences(newExperiences);\n  };\n\n  const addSkill = (skill: Skill) => {\n    const newSkills = [...skills, skill];\n    updateSkills(newSkills);\n  };\n\n  const updateSkill = (name: string, skill: Skill) => {\n    const newSkills = skills.map(s => s.name === name ? skill : s);\n    updateSkills(newSkills);\n  };\n\n  const deleteSkill = (name: string) => {\n    const newSkills = skills.filter(s => s.name !== name);\n    updateSkills(newSkills);\n  };\n\n  const value = {\n    projects,\n    experiences,\n    skills,\n    updateProjects,\n    updateExperiences,\n    updateSkills,\n    addProject,\n    updateProject,\n    deleteProject,\n    addExperience,\n    updateExperience,\n    deleteExperience,\n    addSkill,\n    updateSkill,\n    deleteSkill\n  };\n\n  return (\n    <DataContext.Provider value={value}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}