{"ast":null,"code":"import _objectSpread from\"C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const EnhancementContext=/*#__PURE__*/createContext(undefined);export const useEnhancements=()=>{const context=useContext(EnhancementContext);if(context===undefined){throw new Error('useEnhancements must be used within an EnhancementProvider');}return context;};export const EnhancementProvider=_ref=>{let{children}=_ref;const[enhancements,setEnhancements]=useState({profileHover:true,roleClickable:true,textShadows:true,microAnimations:true,backgroundPatterns:true,enhancedScrollPrompt:true,tagline:true,enhancedBio:true});const updateEnhancements=newEnhancements=>{setEnhancements(prev=>_objectSpread(_objectSpread({},prev),newEnhancements));};return/*#__PURE__*/_jsx(EnhancementContext.Provider,{value:{enhancements,updateEnhancements},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","EnhancementContext","undefined","useEnhancements","context","Error","EnhancementProvider","_ref","children","enhancements","setEnhancements","profileHover","roleClickable","textShadows","microAnimations","backgroundPatterns","enhancedScrollPrompt","tagline","enhancedBio","updateEnhancements","newEnhancements","prev","_objectSpread","Provider","value"],"sources":["C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/src/contexts/EnhancementContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface EnhancementSettings {\r\n  profileHover: boolean;\r\n  roleClickable: boolean;\r\n  textShadows: boolean;\r\n  microAnimations: boolean;\r\n  backgroundPatterns: boolean;\r\n  enhancedScrollPrompt: boolean;\r\n  tagline: boolean;\r\n  enhancedBio: boolean;\r\n}\r\n\r\ninterface EnhancementContextType {\r\n  enhancements: EnhancementSettings;\r\n  updateEnhancements: (newEnhancements: Partial<EnhancementSettings>) => void;\r\n}\r\n\r\nconst EnhancementContext = createContext<EnhancementContextType | undefined>(undefined);\r\n\r\nexport const useEnhancements = () => {\r\n  const context = useContext(EnhancementContext);\r\n  if (context === undefined) {\r\n    throw new Error('useEnhancements must be used within an EnhancementProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface EnhancementProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const EnhancementProvider: React.FC<EnhancementProviderProps> = ({ children }) => {\r\n  const [enhancements, setEnhancements] = useState<EnhancementSettings>({\r\n    profileHover: true,\r\n    roleClickable: true,\r\n    textShadows: true,\r\n    microAnimations: true,\r\n    backgroundPatterns: true,\r\n    enhancedScrollPrompt: true,\r\n    tagline: true,\r\n    enhancedBio: true\r\n  });\r\n\r\n  const updateEnhancements = (newEnhancements: Partial<EnhancementSettings>) => {\r\n    setEnhancements(prev => ({ ...prev, ...newEnhancements }));\r\n  };\r\n\r\n  return (\r\n    <EnhancementContext.Provider value={{ enhancements, updateEnhancements }}>\r\n      {children}\r\n    </EnhancementContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"4IAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAkB9E,KAAM,CAAAC,kBAAkB,cAAGL,aAAa,CAAqCM,SAAS,CAAC,CAEvF,MAAO,MAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACI,kBAAkB,CAAC,CAC9C,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CAAC,4DAA4D,CAAC,CAC/E,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAE,mBAAuD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClF,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAsB,CACpEa,YAAY,CAAE,IAAI,CAClBC,aAAa,CAAE,IAAI,CACnBC,WAAW,CAAE,IAAI,CACjBC,eAAe,CAAE,IAAI,CACrBC,kBAAkB,CAAE,IAAI,CACxBC,oBAAoB,CAAE,IAAI,CAC1BC,OAAO,CAAE,IAAI,CACbC,WAAW,CAAE,IACf,CAAC,CAAC,CAEF,KAAM,CAAAC,kBAAkB,CAAIC,eAA6C,EAAK,CAC5EV,eAAe,CAACW,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,EAAKD,eAAe,CAAG,CAAC,CAC5D,CAAC,CAED,mBACEpB,IAAA,CAACC,kBAAkB,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAEf,YAAY,CAAEU,kBAAmB,CAAE,CAAAX,QAAA,CACtEA,QAAQ,CACkB,CAAC,CAElC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}