{"ast":null,"code":"// Global error handler to suppress ResizeObserver warnings\nexport const setupErrorHandling = () => {\n  // Store original console methods\n  const originalError = console.error;\n  const originalWarn = console.warn;\n\n  // Override console.error\n  console.error = (...args) => {\n    const message = args[0];\n    if (typeof message === 'string') {\n      // Suppress ResizeObserver related errors\n      if (message.includes('ResizeObserver loop completed with undelivered notifications') || message.includes('ResizeObserver loop limit exceeded') || message.includes('ResizeObserver loop completed') || message.includes('ResizeObserver')) {\n        return;\n      }\n    }\n    originalError(...args);\n  };\n\n  // Override console.warn\n  console.warn = (...args) => {\n    const message = args[0];\n    if (typeof message === 'string') {\n      // Suppress ResizeObserver related warnings\n      if (message.includes('ResizeObserver') || message.includes('ResizeObserver loop')) {\n        return;\n      }\n    }\n    originalWarn(...args);\n  };\n\n  // Global error handler for unhandled errors\n  window.addEventListener('error', event => {\n    if (event.message && event.message.includes('ResizeObserver')) {\n      event.preventDefault();\n      event.stopPropagation();\n      return false;\n    }\n  });\n\n  // Global handler for unhandled promise rejections\n  window.addEventListener('unhandledrejection', event => {\n    if (event.reason && event.reason.message && event.reason.message.includes('ResizeObserver')) {\n      event.preventDefault();\n      event.stopPropagation();\n      return false;\n    }\n  });\n\n  // Override the global error handler\n  const originalOnError = window.onerror;\n  window.onerror = (message, source, lineno, colno, error) => {\n    if (typeof message === 'string' && message.includes('ResizeObserver')) {\n      return true; // Prevent default error handling\n    }\n    if (originalOnError) {\n      return originalOnError(message, source, lineno, colno, error);\n    }\n    return false;\n  };\n\n  // Override the global unhandled rejection handler\n  const originalOnUnhandledRejection = window.onunhandledrejection;\n  window.onunhandledrejection = event => {\n    if (event.reason && event.reason.message && event.reason.message.includes('ResizeObserver')) {\n      event.preventDefault();\n      return true;\n    }\n    if (originalOnUnhandledRejection) {\n      return originalOnUnhandledRejection(event);\n    }\n    return false;\n  };\n\n  // Override ResizeObserver to prevent errors\n  if (typeof window !== 'undefined' && window.ResizeObserver) {\n    const OriginalResizeObserver = window.ResizeObserver;\n    window.ResizeObserver = class extends OriginalResizeObserver {\n      constructor(callback) {\n        super((entries, observer) => {\n          try {\n            callback(entries, observer);\n          } catch (error) {\n            // Suppress ResizeObserver errors\n            if (error instanceof Error && error.message.includes('ResizeObserver')) {\n              return;\n            }\n            throw error;\n          }\n        });\n      }\n    };\n  }\n};","map":{"version":3,"names":["setupErrorHandling","originalError","console","error","originalWarn","warn","args","message","includes","window","addEventListener","event","preventDefault","stopPropagation","reason","originalOnError","onerror","source","lineno","colno","originalOnUnhandledRejection","onunhandledrejection","ResizeObserver","OriginalResizeObserver","constructor","callback","entries","observer","Error"],"sources":["C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/src/utils/errorHandler.ts"],"sourcesContent":["// Global error handler to suppress ResizeObserver warnings\r\nexport const setupErrorHandling = () => {\r\n  // Store original console methods\r\n  const originalError = console.error;\r\n  const originalWarn = console.warn;\r\n\r\n  // Override console.error\r\n  console.error = (...args) => {\r\n    const message = args[0];\r\n    if (typeof message === 'string') {\r\n      // Suppress ResizeObserver related errors\r\n      if (message.includes('ResizeObserver loop completed with undelivered notifications') ||\r\n          message.includes('ResizeObserver loop limit exceeded') ||\r\n          message.includes('ResizeObserver loop completed') ||\r\n          message.includes('ResizeObserver')) {\r\n        return;\r\n      }\r\n    }\r\n    originalError(...args);\r\n  };\r\n\r\n  // Override console.warn\r\n  console.warn = (...args) => {\r\n    const message = args[0];\r\n    if (typeof message === 'string') {\r\n      // Suppress ResizeObserver related warnings\r\n      if (message.includes('ResizeObserver') ||\r\n          message.includes('ResizeObserver loop')) {\r\n        return;\r\n      }\r\n    }\r\n    originalWarn(...args);\r\n  };\r\n\r\n  // Global error handler for unhandled errors\r\n  window.addEventListener('error', (event) => {\r\n    if (event.message && event.message.includes('ResizeObserver')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // Global handler for unhandled promise rejections\r\n  window.addEventListener('unhandledrejection', (event) => {\r\n    if (event.reason && event.reason.message && event.reason.message.includes('ResizeObserver')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // Override the global error handler\r\n  const originalOnError = window.onerror;\r\n  window.onerror = (message, source, lineno, colno, error) => {\r\n    if (typeof message === 'string' && message.includes('ResizeObserver')) {\r\n      return true; // Prevent default error handling\r\n    }\r\n    if (originalOnError) {\r\n      return originalOnError(message, source, lineno, colno, error);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Override the global unhandled rejection handler\r\n  const originalOnUnhandledRejection = window.onunhandledrejection;\r\n  window.onunhandledrejection = (event) => {\r\n    if (event.reason && event.reason.message && event.reason.message.includes('ResizeObserver')) {\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n    if (originalOnUnhandledRejection) {\r\n      return originalOnUnhandledRejection(event);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Override ResizeObserver to prevent errors\r\n  if (typeof window !== 'undefined' && window.ResizeObserver) {\r\n    const OriginalResizeObserver = window.ResizeObserver;\r\n    window.ResizeObserver = class extends OriginalResizeObserver {\r\n      constructor(callback: ResizeObserverCallback) {\r\n        super((entries, observer) => {\r\n          try {\r\n            callback(entries, observer);\r\n          } catch (error) {\r\n            // Suppress ResizeObserver errors\r\n            if (error instanceof Error && error.message.includes('ResizeObserver')) {\r\n              return;\r\n            }\r\n            throw error;\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}