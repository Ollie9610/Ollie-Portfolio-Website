{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);useEffect(()=>{// Check if user is logged in (stored in localStorage)\nconst savedUser=localStorage.getItem('portfolio_user');if(savedUser){setUser(JSON.parse(savedUser));setIsAuthenticated(true);}},[]);const login=async(username,password)=>{// Simple authentication - in production, this would be more secure\nif(username==='admin'&&password==='portfolio2024'){const userData={id:'1',username:'admin',email:'admin@portfolio.com'};setUser(userData);setIsAuthenticated(true);localStorage.setItem('portfolio_user',JSON.stringify(userData));return true;}return false;};const logout=()=>{setUser(null);setIsAuthenticated(false);localStorage.removeItem('portfolio_user');};const value={user,login,logout,isAuthenticated};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","savedUser","localStorage","getItem","JSON","parse","login","username","password","userData","id","email","setItem","stringify","logout","removeItem","value","Provider"],"sources":["C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (username: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in (stored in localStorage)\r\n    const savedUser = localStorage.getItem('portfolio_user');\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string): Promise<boolean> => {\r\n    // Simple authentication - in production, this would be more secure\r\n    if (username === 'admin' && password === 'portfolio2024') {\r\n      const userData: User = {\r\n        id: '1',\r\n        username: 'admin',\r\n        email: 'admin@portfolio.com'\r\n      };\r\n      \r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('portfolio_user', JSON.stringify(userData));\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('portfolio_user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    logout,\r\n    isAuthenticated\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAe9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAA8BO,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,WAAW,CAAC,CACvC,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAE,YAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACc,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAE7DC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAe,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CACxD,GAAIF,SAAS,CAAE,CACbH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC,CAC9BD,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,KAAK,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,GAAuB,CAC5E;AACA,GAAID,QAAQ,GAAK,OAAO,EAAIC,QAAQ,GAAK,eAAe,CAAE,CACxD,KAAM,CAAAC,QAAc,CAAG,CACrBC,EAAE,CAAE,GAAG,CACPH,QAAQ,CAAE,OAAO,CACjBI,KAAK,CAAE,qBACT,CAAC,CAEDb,OAAO,CAACW,QAAQ,CAAC,CACjBT,kBAAkB,CAAC,IAAI,CAAC,CACxBE,YAAY,CAACU,OAAO,CAAC,gBAAgB,CAAER,IAAI,CAACS,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAChE,MAAO,KAAI,CACb,CACA,MAAO,MAAK,CACd,CAAC,CAED,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAM,CACnBhB,OAAO,CAAC,IAAI,CAAC,CACbE,kBAAkB,CAAC,KAAK,CAAC,CACzBE,YAAY,CAACa,UAAU,CAAC,gBAAgB,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZnB,IAAI,CACJS,KAAK,CACLQ,MAAM,CACNf,eACF,CAAC,CAED,mBACEX,IAAA,CAACC,WAAW,CAAC4B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAApB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}