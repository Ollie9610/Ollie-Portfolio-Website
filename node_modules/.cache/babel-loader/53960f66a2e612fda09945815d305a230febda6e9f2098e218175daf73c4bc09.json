{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ollie\\\\OneDrive\\\\Desktop\\\\Personal Portfolio Site\\\\src\\\\contexts\\\\EnhancementContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancementContext = /*#__PURE__*/createContext(undefined);\nexport const useEnhancements = () => {\n  _s();\n  const context = useContext(EnhancementContext);\n  if (context === undefined) {\n    throw new Error('useEnhancements must be used within an EnhancementProvider');\n  }\n  return context;\n};\n_s(useEnhancements, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const EnhancementProvider = ({\n  children\n}) => {\n  _s2();\n  const [enhancements, setEnhancements] = useState({\n    profileHover: true,\n    roleClickable: true,\n    textShadows: true,\n    microAnimations: true,\n    backgroundPatterns: true,\n    enhancedScrollPrompt: true,\n    tagline: true,\n    enhancedBio: true\n  });\n  const updateEnhancements = newEnhancements => {\n    setEnhancements(prev => ({\n      ...prev,\n      ...newEnhancements\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(EnhancementContext.Provider, {\n    value: {\n      enhancements,\n      updateEnhancements\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s2(EnhancementProvider, \"JOsSnda2vNip8QUW/aMfwwN9M+U=\");\n_c = EnhancementProvider;\nvar _c;\n$RefreshReg$(_c, \"EnhancementProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","EnhancementContext","undefined","useEnhancements","_s","context","Error","EnhancementProvider","children","_s2","enhancements","setEnhancements","profileHover","roleClickable","textShadows","microAnimations","backgroundPatterns","enhancedScrollPrompt","tagline","enhancedBio","updateEnhancements","newEnhancements","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/src/contexts/EnhancementContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface EnhancementSettings {\r\n  profileHover: boolean;\r\n  roleClickable: boolean;\r\n  textShadows: boolean;\r\n  microAnimations: boolean;\r\n  backgroundPatterns: boolean;\r\n  enhancedScrollPrompt: boolean;\r\n  tagline: boolean;\r\n  enhancedBio: boolean;\r\n}\r\n\r\ninterface EnhancementContextType {\r\n  enhancements: EnhancementSettings;\r\n  updateEnhancements: (newEnhancements: Partial<EnhancementSettings>) => void;\r\n}\r\n\r\nconst EnhancementContext = createContext<EnhancementContextType | undefined>(undefined);\r\n\r\nexport const useEnhancements = () => {\r\n  const context = useContext(EnhancementContext);\r\n  if (context === undefined) {\r\n    throw new Error('useEnhancements must be used within an EnhancementProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface EnhancementProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const EnhancementProvider: React.FC<EnhancementProviderProps> = ({ children }) => {\r\n  const [enhancements, setEnhancements] = useState<EnhancementSettings>({\r\n    profileHover: true,\r\n    roleClickable: true,\r\n    textShadows: true,\r\n    microAnimations: true,\r\n    backgroundPatterns: true,\r\n    enhancedScrollPrompt: true,\r\n    tagline: true,\r\n    enhancedBio: true\r\n  });\r\n\r\n  const updateEnhancements = (newEnhancements: Partial<EnhancementSettings>) => {\r\n    setEnhancements(prev => ({ ...prev, ...newEnhancements }));\r\n  };\r\n\r\n  return (\r\n    <EnhancementContext.Provider value={{ enhancements, updateEnhancements }}>\r\n      {children}\r\n    </EnhancementContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkB9E,MAAMC,kBAAkB,gBAAGL,aAAa,CAAqCM,SAAS,CAAC;AAEvF,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,OAAO,GAAGR,UAAU,CAACI,kBAAkB,CAAC;EAC9C,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,4DAA4D,CAAC;EAC/E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,eAAe;AAY5B,OAAO,MAAMI,mBAAuD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACvF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAsB;IACpEc,YAAY,EAAE,IAAI;IAClBC,aAAa,EAAE,IAAI;IACnBC,WAAW,EAAE,IAAI;IACjBC,eAAe,EAAE,IAAI;IACrBC,kBAAkB,EAAE,IAAI;IACxBC,oBAAoB,EAAE,IAAI;IAC1BC,OAAO,EAAE,IAAI;IACbC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,kBAAkB,GAAIC,eAA6C,IAAK;IAC5EV,eAAe,CAACW,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,GAAGD;IAAgB,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,oBACErB,OAAA,CAACC,kBAAkB,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEd,YAAY;MAAEU;IAAmB,CAAE;IAAAZ,QAAA,EACtEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;AAACnB,GAAA,CArBWF,mBAAuD;AAAAsB,EAAA,GAAvDtB,mBAAuD;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}