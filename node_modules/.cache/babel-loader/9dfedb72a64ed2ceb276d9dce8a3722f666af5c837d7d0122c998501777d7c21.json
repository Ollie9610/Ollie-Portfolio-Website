{"ast":null,"code":"// Global error handler to suppress ResizeObserver warnings\nexport const setupErrorHandling=()=>{// Store original console methods\nconst originalError=console.error;const originalWarn=console.warn;// Override console.error\nconsole.error=function(){const message=arguments.length<=0?undefined:arguments[0];if(typeof message==='string'){// Suppress ResizeObserver related errors\nif(message.includes('ResizeObserver loop completed with undelivered notifications')||message.includes('ResizeObserver loop limit exceeded')||message.includes('ResizeObserver loop completed')||message.includes('ResizeObserver')){return;}}originalError(...arguments);};// Override console.warn\nconsole.warn=function(){const message=arguments.length<=0?undefined:arguments[0];if(typeof message==='string'){// Suppress ResizeObserver related warnings\nif(message.includes('ResizeObserver')||message.includes('ResizeObserver loop')){return;}}originalWarn(...arguments);};// Global error handler for unhandled errors\nwindow.addEventListener('error',event=>{if(event.message&&event.message.includes('ResizeObserver')){event.preventDefault();event.stopPropagation();return false;}});// Global handler for unhandled promise rejections\nwindow.addEventListener('unhandledrejection',event=>{if(event.reason&&event.reason.message&&event.reason.message.includes('ResizeObserver')){event.preventDefault();event.stopPropagation();return false;}});// Override the global error handler\nconst originalOnError=window.onerror;window.onerror=(message,source,lineno,colno,error)=>{if(typeof message==='string'&&message.includes('ResizeObserver')){return true;// Prevent default error handling\n}if(originalOnError){return originalOnError(message,source,lineno,colno,error);}return false;};// Override the global unhandled rejection handler\nconst originalOnUnhandledRejection=window.onunhandledrejection;window.onunhandledrejection=event=>{if(event.reason&&event.reason.message&&event.reason.message.includes('ResizeObserver')){event.preventDefault();return true;}if(originalOnUnhandledRejection){return originalOnUnhandledRejection.call(window,event);}return false;};// Override ResizeObserver to prevent errors\nif(typeof window!=='undefined'&&window.ResizeObserver){const OriginalResizeObserver=window.ResizeObserver;window.ResizeObserver=class extends OriginalResizeObserver{constructor(callback){super((entries,observer)=>{try{callback(entries,observer);}catch(error){// Suppress ResizeObserver errors\nif(error instanceof Error&&error.message.includes('ResizeObserver')){return;}throw error;}});}};}};","map":{"version":3,"names":["setupErrorHandling","originalError","console","error","originalWarn","warn","message","arguments","length","undefined","includes","window","addEventListener","event","preventDefault","stopPropagation","reason","originalOnError","onerror","source","lineno","colno","originalOnUnhandledRejection","onunhandledrejection","call","ResizeObserver","OriginalResizeObserver","constructor","callback","entries","observer","Error"],"sources":["C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/src/utils/errorHandler.ts"],"sourcesContent":["// Global error handler to suppress ResizeObserver warnings\r\nexport const setupErrorHandling = () => {\r\n  // Store original console methods\r\n  const originalError = console.error;\r\n  const originalWarn = console.warn;\r\n\r\n  // Override console.error\r\n  console.error = (...args) => {\r\n    const message = args[0];\r\n    if (typeof message === 'string') {\r\n      // Suppress ResizeObserver related errors\r\n      if (message.includes('ResizeObserver loop completed with undelivered notifications') ||\r\n          message.includes('ResizeObserver loop limit exceeded') ||\r\n          message.includes('ResizeObserver loop completed') ||\r\n          message.includes('ResizeObserver')) {\r\n        return;\r\n      }\r\n    }\r\n    originalError(...args);\r\n  };\r\n\r\n  // Override console.warn\r\n  console.warn = (...args) => {\r\n    const message = args[0];\r\n    if (typeof message === 'string') {\r\n      // Suppress ResizeObserver related warnings\r\n      if (message.includes('ResizeObserver') ||\r\n          message.includes('ResizeObserver loop')) {\r\n        return;\r\n      }\r\n    }\r\n    originalWarn(...args);\r\n  };\r\n\r\n  // Global error handler for unhandled errors\r\n  window.addEventListener('error', (event) => {\r\n    if (event.message && event.message.includes('ResizeObserver')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // Global handler for unhandled promise rejections\r\n  window.addEventListener('unhandledrejection', (event) => {\r\n    if (event.reason && event.reason.message && event.reason.message.includes('ResizeObserver')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // Override the global error handler\r\n  const originalOnError = window.onerror;\r\n  window.onerror = (message, source, lineno, colno, error) => {\r\n    if (typeof message === 'string' && message.includes('ResizeObserver')) {\r\n      return true; // Prevent default error handling\r\n    }\r\n    if (originalOnError) {\r\n      return originalOnError(message, source, lineno, colno, error);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Override the global unhandled rejection handler\r\n  const originalOnUnhandledRejection = window.onunhandledrejection;\r\n  window.onunhandledrejection = (event) => {\r\n    if (event.reason && event.reason.message && event.reason.message.includes('ResizeObserver')) {\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n    if (originalOnUnhandledRejection) {\r\n      return originalOnUnhandledRejection.call(window, event);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Override ResizeObserver to prevent errors\r\n  if (typeof window !== 'undefined' && window.ResizeObserver) {\r\n    const OriginalResizeObserver = window.ResizeObserver;\r\n    window.ResizeObserver = class extends OriginalResizeObserver {\r\n      constructor(callback: ResizeObserverCallback) {\r\n        super((entries, observer) => {\r\n          try {\r\n            callback(entries, observer);\r\n          } catch (error) {\r\n            // Suppress ResizeObserver errors\r\n            if (error instanceof Error && error.message.includes('ResizeObserver')) {\r\n              return;\r\n            }\r\n            throw error;\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}