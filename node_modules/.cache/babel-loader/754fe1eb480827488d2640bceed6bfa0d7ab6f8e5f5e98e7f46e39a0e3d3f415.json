{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ollie\\\\OneDrive\\\\Desktop\\\\Personal Portfolio Site\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\n// Suppress ResizeObserver errors immediately\nconst originalError = console.error;\nconsole.error = (...args) => {\n  const message = args[0];\n  if (typeof message === 'string' && (message.includes('ResizeObserver loop completed with undelivered notifications') || message.includes('ResizeObserver loop limit exceeded') || message.includes('ResizeObserver loop completed') || message.includes('ResizeObserver'))) {\n    return;\n  }\n  originalError(...args);\n};\n\n// Also suppress console.warn\nconst originalWarn = console.warn;\nconsole.warn = (...args) => {\n  const message = args[0];\n  if (typeof message === 'string' && message.includes('ResizeObserver')) {\n    return;\n  }\n  originalWarn(...args);\n};\n\n// Override ResizeObserver globally\nif (typeof window !== 'undefined' && window.ResizeObserver) {\n  const OriginalResizeObserver = window.ResizeObserver;\n  window.ResizeObserver = class extends OriginalResizeObserver {\n    constructor(callback) {\n      super((entries, observer) => {\n        try {\n          callback(entries, observer);\n        } catch (error) {\n          // Silently ignore ResizeObserver errors\n          if (error instanceof Error && error.message.includes('ResizeObserver')) {\n            return;\n          }\n          throw error;\n        }\n      });\n    }\n  };\n}\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","originalError","console","error","args","message","includes","originalWarn","warn","window","ResizeObserver","OriginalResizeObserver","constructor","callback","entries","observer","Error","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ollie/OneDrive/Desktop/Personal Portfolio Site/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\n\r\n// Suppress ResizeObserver errors immediately\r\nconst originalError = console.error;\r\nconsole.error = (...args) => {\r\n  const message = args[0];\r\n  if (typeof message === 'string' && \r\n      (message.includes('ResizeObserver loop completed with undelivered notifications') ||\r\n       message.includes('ResizeObserver loop limit exceeded') ||\r\n       message.includes('ResizeObserver loop completed') ||\r\n       message.includes('ResizeObserver'))) {\r\n    return;\r\n  }\r\n  originalError(...args);\r\n};\r\n\r\n// Also suppress console.warn\r\nconst originalWarn = console.warn;\r\nconsole.warn = (...args) => {\r\n  const message = args[0];\r\n  if (typeof message === 'string' && message.includes('ResizeObserver')) {\r\n    return;\r\n  }\r\n  originalWarn(...args);\r\n};\r\n\r\n// Override ResizeObserver globally\r\nif (typeof window !== 'undefined' && window.ResizeObserver) {\r\n  const OriginalResizeObserver = window.ResizeObserver;\r\n  window.ResizeObserver = class extends OriginalResizeObserver {\r\n    constructor(callback: ResizeObserverCallback) {\r\n      super((entries, observer) => {\r\n        try {\r\n          callback(entries, observer);\r\n        } catch (error) {\r\n          // Silently ignore ResizeObserver errors\r\n          if (error instanceof Error && error.message.includes('ResizeObserver')) {\r\n            return;\r\n          }\r\n          throw error;\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;;AAEpB;AACA,MAAMC,aAAa,GAAGC,OAAO,CAACC,KAAK;AACnCD,OAAO,CAACC,KAAK,GAAG,CAAC,GAAGC,IAAI,KAAK;EAC3B,MAAMC,OAAO,GAAGD,IAAI,CAAC,CAAC,CAAC;EACvB,IAAI,OAAOC,OAAO,KAAK,QAAQ,KAC1BA,OAAO,CAACC,QAAQ,CAAC,8DAA8D,CAAC,IAChFD,OAAO,CAACC,QAAQ,CAAC,oCAAoC,CAAC,IACtDD,OAAO,CAACC,QAAQ,CAAC,+BAA+B,CAAC,IACjDD,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,EAAE;IACxC;EACF;EACAL,aAAa,CAAC,GAAGG,IAAI,CAAC;AACxB,CAAC;;AAED;AACA,MAAMG,YAAY,GAAGL,OAAO,CAACM,IAAI;AACjCN,OAAO,CAACM,IAAI,GAAG,CAAC,GAAGJ,IAAI,KAAK;EAC1B,MAAMC,OAAO,GAAGD,IAAI,CAAC,CAAC,CAAC;EACvB,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IACrE;EACF;EACAC,YAAY,CAAC,GAAGH,IAAI,CAAC;AACvB,CAAC;;AAED;AACA,IAAI,OAAOK,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,cAAc,EAAE;EAC1D,MAAMC,sBAAsB,GAAGF,MAAM,CAACC,cAAc;EACpDD,MAAM,CAACC,cAAc,GAAG,cAAcC,sBAAsB,CAAC;IAC3DC,WAAWA,CAACC,QAAgC,EAAE;MAC5C,KAAK,CAAC,CAACC,OAAO,EAAEC,QAAQ,KAAK;QAC3B,IAAI;UACFF,QAAQ,CAACC,OAAO,EAAEC,QAAQ,CAAC;QAC7B,CAAC,CAAC,OAAOZ,KAAK,EAAE;UACd;UACA,IAAIA,KAAK,YAAYa,KAAK,IAAIb,KAAK,CAACE,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;YACtE;UACF;UACA,MAAMH,KAAK;QACb;MACF,CAAC,CAAC;IACJ;EACF,CAAC;AACH;AAEA,OAAOc,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGpB,QAAQ,CAACqB,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AACDH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACpB,KAAK,CAAC0B,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACF,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}